package vrimplantacao2_5.gui.componente.checks.migracao;

import vrimplantacao2.parametro.Parametros;
import vrimplantacao2_5.vo.enums.EOpcoesMigracaoSistema;

/**
 *
 * @author Desenvolvimento
 */
public class ChecksOpcoesMigracao extends javax.swing.JPanel {

    /**
     * Creates new form OpcoesMigracao
     */
    public ChecksOpcoesMigracao() {
        initComponents();
    }

    public void gravarOpcoesMigracao() {        
        try {
            Parametros params = Parametros.get();
            params.put(chkOptMigrarMercadologicos.isSelected(), "OPCAO MIGRACAO", "MIGRAR MERCADOLOGICOS");
            params.put(chkOptMigrarFamiliasProdutos.isSelected(), "OPCAO MIGRACAO", "MIGRAR FAMILIAS PRODUTO");
            params.put(chkOptMigrarProdutos.isSelected(), "OPCAO MIGRACAO", "MIGRAR PRODUTOS");
            params.put(chkOptMigrarFornecedores.isSelected(), "OPCAO MIGRACAO", "MIGRAR FORNECEDORES");
            params.put(chkOptMigrarProdutosFornecedores.isSelected(), "OPCAO MIGRACAO", "MIGRAR PRODUTOS FORNECEDORES");
            params.put(chkOptMigrarContasPagar.isSelected(), "OPCAO MIGRACAO", "MIGRAR CONTAS PAGAR");
            params.put(chkOptMigrarClientesPreferenciais.isSelected(), "OPCAO MIGRACAO", "MIGRAR CLIENTES PREFERENCIAIS");
            params.put(chkOptMigrarClientesEventuais.isSelected(), "OPCAO MIGRACAO", "MIGRAR CLIENTES EVENTUAIS");
            params.put(chkOptMigrarReceberCreditoRotativo.isSelected(), "OPCAO MIGRACAO", "MIGRAR RECEBER CREDITO ROTATIVO");
            params.put(chkOptMigrarReceberCheque.isSelected(), "OPCAO MIGRACAO", "MIGRAR RECEBER CHEQUE");
            params.put(chkOptMigrarVendas.isSelected(), "OPCAO MIGRACAO", "MIGRAR VENDAS");

            params.salvar();

        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    public void carregarOpcoesMigracao() throws Exception {
        Parametros params = Parametros.get();
        chkOptMigrarMercadologicos.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR MERCADOLOGICOS"));
        chkOptMigrarFamiliasProdutos.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR FAMILIAS PRODUTO"));
        chkOptMigrarProdutos.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR PRODUTOS"));
        chkOptMigrarFornecedores.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR FORNECEDORES"));
        chkOptMigrarProdutosFornecedores.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR PRODUTOS FORNECEDORES"));
        chkOptMigrarContasPagar.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR CONTAS PAGAR"));
        chkOptMigrarClientesPreferenciais.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR CLIENTES PREFERENCIAIS"));
        chkOptMigrarClientesEventuais.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR CLIENTES EVENTUAIS"));
        chkOptMigrarReceberCreditoRotativo.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR RECEBER CREDITO ROTATIVO"));
        chkOptMigrarReceberCheque.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR RECEBER CHEQUE"));
        chkOptMigrarVendas.setSelected(params.getBool("OPCAO MIGRACAO", "MIGRAR VENDAS"));
    }
    
    public void habiltarOpcaoesMigracao(EOpcoesMigracaoSistema opcoes) {
        if (opcoes != null) {
            chkOptMigrarFamiliasProdutos.setVisible(opcoes.isHabilitarMigracaoFamiliaProduto());
            chkOptMigrarMercadologicos.setVisible(opcoes.isHabilitarMigracaoMercadologico());
            chkOptMigrarProdutos.setVisible(opcoes.isHabilitarMigracaoProduto());
            chkOptMigrarFornecedores.setVisible(opcoes.isHabilitarMigracaoFornecedor());
            chkOptMigrarProdutosFornecedores.setVisible(opcoes.isHabilitarMigracaoProdutoFornecedor());
            chkOptMigrarClientesPreferenciais.setVisible(opcoes.isHabilitarMigracaoClientePreferencial());
            chkOptMigrarClientesEventuais.setVisible(opcoes.isHabilitarMigracaoClienteEventual());
            chkOptMigrarReceberCreditoRotativo.setVisible(opcoes.isHabilitarMigracaoCreditoRotativo());
            chkOptMigrarReceberCheque.setVisible(opcoes.isHabilitarMigracaoCheque());
            chkOptMigrarVendas.setVisible(opcoes.isHabilitarMigracaoVenda());
            chkOptMigrarContasPagar.setVisible(opcoes.isHabilitarMigracaoContasPagar());
            
            this.revalidate();
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkOptMigrarMercadologicos = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarFamiliasProdutos = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarProdutos = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarFornecedores = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarProdutosFornecedores = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarContasPagar = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarVendas = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarReceberCreditoRotativo = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarClientesEventuais = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarClientesPreferenciais = new vr.view.components.checkbox.VRCheckBox();
        chkOptMigrarReceberCheque = new vr.view.components.checkbox.VRCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarMercadologicos, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarMercadologicos.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarFamiliasProdutos, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarFamiliasProdutos.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarProdutos, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarProdutos.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarFornecedores, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarFornecedores.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarProdutosFornecedores, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarProdutosFornecedores.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarContasPagar, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarContasPagar.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarVendas, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarVendas.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarReceberCreditoRotativo, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarReceberCreditoRotativo.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarClientesEventuais, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarClientesEventuais.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarClientesPreferenciais, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarClientesPreferenciais.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chkOptMigrarReceberCheque, org.openide.util.NbBundle.getMessage(ChecksOpcoesMigracao.class, "ChecksOpcoesMigracao.chkOptMigrarReceberCheque.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkOptMigrarContasPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkOptMigrarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarProdutosFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarFamiliasProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarMercadologicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkOptMigrarClientesPreferenciais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarClientesEventuais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarReceberCreditoRotativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarReceberCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkOptMigrarVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkOptMigrarMercadologicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkOptMigrarClientesPreferenciais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkOptMigrarFamiliasProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkOptMigrarClientesEventuais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkOptMigrarProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(chkOptMigrarFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(chkOptMigrarProdutosFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(chkOptMigrarContasPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(chkOptMigrarReceberCreditoRotativo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkOptMigrarReceberCheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkOptMigrarVendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarClientesEventuais;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarClientesPreferenciais;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarContasPagar;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarFamiliasProdutos;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarFornecedores;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarMercadologicos;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarProdutos;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarProdutosFornecedores;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarReceberCheque;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarReceberCreditoRotativo;
    private vr.view.components.checkbox.VRCheckBox chkOptMigrarVendas;
    // End of variables declaration//GEN-END:variables
}
