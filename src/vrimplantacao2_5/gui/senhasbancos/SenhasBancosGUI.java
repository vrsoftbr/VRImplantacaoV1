/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vrimplantacao2_5.gui.senhasbancos;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.List;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.openide.util.Exceptions;
import vrimplantacao2_5.dao.cadastro.sistemabancodados.SistemaBancoDadosDAO;
import vrimplantacao2_5.gui.cadastro.configuracao.ConfiguracaoBaseDadosGUI;
import vrimplantacao2_5.vo.cadastro.SistemaBancoDadosVO;

/**
 *
 * @author Desenvolvimento
 */
public class SenhasBancosGUI extends javax.swing.JFrame {

    SistemaBancoDadosVO vo = new SistemaBancoDadosVO();
    ConfiguracaoBaseDadosGUI configuracaoBaseDadosGU = null;

    public SenhasBancosGUI(ConfiguracaoBaseDadosGUI configuracaoBaseDadosGUI) throws Exception {
        configuracaoBaseDadosGU = configuracaoBaseDadosGUI;
        initComponents();
        setLocationRelativeTo(null);
        carregarTabela(tabelaDados);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelRolagem = new javax.swing.JScrollPane();
        painelPrincipal = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaInstrucao = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaDados = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(SenhasBancosGUI.class, "SenhasBancosGUI.title")); // NOI18N

        textAreaInstrucao.setEditable(false);
        textAreaInstrucao.setColumns(20);
        textAreaInstrucao.setRows(5);
        textAreaInstrucao.setText(org.openide.util.NbBundle.getMessage(SenhasBancosGUI.class, "SenhasBancosGUI.textAreaInstrucao.text")); // NOI18N
        jScrollPane1.setViewportView(textAreaInstrucao);

        tabelaDados = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tabelaDados.setRequestFocusEnabled(false);
        tabelaDados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDadosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabelaDados);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(SenhasBancosGUI.class, "SenhasBancosGUI.jLabel1.text")); // NOI18N

        txtPesquisa.setText(org.openide.util.NbBundle.getMessage(SenhasBancosGUI.class, "SenhasBancosGUI.txtPesquisa.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(btnPesquisar, org.openide.util.NbBundle.getMessage(SenhasBancosGUI.class, "SenhasBancosGUI.btnPesquisar.text")); // NOI18N
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(txtPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPesquisar)))
                .addContainerGap())
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        painelRolagem.setViewportView(painelPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelRolagem)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelRolagem)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        vo.setNomeSistema("".equals(txtPesquisa.getText()) ? null : txtPesquisa.getText().toUpperCase());
        try {
            carregarTabela(tabelaDados);
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void tabelaDadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDadosMouseClicked
        if (evt.getClickCount() == 2) {
            int id = (int) tabelaDados.getValueAt(tabelaDados.getSelectedRow(), 0);
            configuracaoBaseDadosGU.carregaDados(id);
            this.dispose();
        }
    }//GEN-LAST:event_tabelaDadosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JScrollPane painelRolagem;
    private javax.swing.JTable tabelaDados;
    private javax.swing.JTextArea textAreaInstrucao;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables

    public String getMensagem() {
        return textAreaInstrucao.getText();
    }

    private void carregarTabela(JTable tabelaDados) throws Exception {
        Object[] colunasIntensMgv = {"ID", "SISTEMA","SCHEMA", "USUARIO", "SENHA", "OBSERVACAO"};
        DefaultTableModel modelo = (DefaultTableModel) tabelaDados.getModel();
        modelo.setColumnIdentifiers(colunasIntensMgv);
        modelo.setNumRows(0);
        tabelaDados.getTableHeader().setOpaque(false);
        ((DefaultTableCellRenderer) tabelaDados.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        tabelaDados.getTableHeader().setBackground(Color.BLACK);
        tabelaDados.getTableHeader().setForeground(Color.ORANGE);
        tabelaDados.getTableHeader().setFont(new Font("Tahome", Font.BOLD, 8));
        tabelaDados.getColumnModel().getColumn(0).setPreferredWidth(30);
        tabelaDados.getColumnModel().getColumn(1).setPreferredWidth(80);
        tabelaDados.getColumnModel().getColumn(2).setPreferredWidth(80);
        tabelaDados.getColumnModel().getColumn(3).setPreferredWidth(60);
        tabelaDados.getColumnModel().getColumn(4).setPreferredWidth(60);
        tabelaDados.getColumnModel().getColumn(5).setPreferredWidth(150);
        tabelaDados.setSelectionBackground(Color.ORANGE);
        tabelaDados.setSelectionForeground(new Color(24, 19, 104));

        modelo = carregaLinhas(modelo);

        tabelaDados.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
            public Component getTableCellRendererComponent(JTable table, Object value,
                    boolean isSelected, boolean hasFocus, int row, int column) {
                super.getTableCellRendererComponent(table, value, isSelected,
                        hasFocus, row, column);
                setHorizontalAlignment(JLabel.CENTER);
                if (isSelected) {
                    setBackground(table.getSelectionBackground());
                    setForeground(table.getSelectionForeground());
                } else {
                    if (row % 2 == 0) {
                        setBackground(Color.WHITE);
                        setForeground(Color.BLACK);
                    } else {
                        setBackground(new Color(220, 220, 220));
                        setForeground(Color.BLACK);
                    }
                }
                return this;
            }
        }
        );
    }

    private DefaultTableModel carregaLinhas(DefaultTableModel modelo) throws Exception {
        SistemaBancoDadosDAO dao = new SistemaBancoDadosDAO();
        List<SistemaBancoDadosVO> listaDados = dao.consultar(vo);
        for (SistemaBancoDadosVO dado : listaDados) {
            modelo.addRow(new Object[]{
                dado.getIdSistema(), dado.getNomeSistema(), dado.getNomeSchema(), dado.getUsuario(), dado.getSenha(), dado.getObservacao()
            });
        }

        return modelo;
    }
}
