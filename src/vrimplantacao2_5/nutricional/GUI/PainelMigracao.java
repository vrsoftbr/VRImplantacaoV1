/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vrimplantacao2_5.nutricional.GUI;

import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;
import vrimplantacao2_5.nutricional.DAO.NutricionalToledoArquivoDAO;

/**
 *
 * @author Desenvolvimento
 */
public class PainelMigracao extends javax.swing.JPanel {

    NutricionalToledoArquivoDAO dao;
    RSyntaxTextArea textArea = new RSyntaxTextArea();
    private String Script = "";

    public String getScript() {
        return Script;
    }

    public void setScript(String Script) {
        this.Script = Script;
    }

    /**
     * Creates new form PainelMigracao
     */
    public PainelMigracao() {
        this.dao = new NutricionalToledoArquivoDAO();
        //initComponents();
        PainelMigracao.this.removeAll();
        textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_SQL);
        textArea.setCodeFoldingEnabled(true);
        textArea.setText(getScript());
        //textArea.setPreferredSize(new Dimension(220, 80));
        RTextScrollPane textScrollPane = new RTextScrollPane(textArea);
        jLabel1 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(571, 405));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PainelMigracao.class, "PainelMigracao.jLabel1.text")); // NOI18N

        textArea.setColumns(20);
        textArea.setRows(5);
        textScrollPane.setViewportView(textArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addGap(0, 234, Short.MAX_VALUE))
                                        .addComponent(textScrollPane))
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(textScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                                .addContainerGap())
        );
        alteraScript();
        //dao.setSql(txtAreaScript.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAreaScript = new javax.swing.JTextArea();

        setPreferredSize(new java.awt.Dimension(571, 405));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(PainelMigracao.class, "PainelMigracao.jLabel1.text")); // NOI18N

        txtAreaScript.setColumns(20);
        txtAreaScript.setRows(5);
        jScrollPane1.setViewportView(txtAreaScript);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 234, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtAreaScript;
    // End of variables declaration//GEN-END:variables

    public void alteraScript() {
        textArea.setText(getScript());
        textArea.setCaretPosition(0);
    }

    public String scriptImportacao() {
 
      String haveText = (textArea.getText().contains("update")) ? "vazio" :
                        (textArea.getText().contains("create")) ? "vazio" :
                        (textArea.getText().contains("delete")) ? "vazio" :
                        (textArea.getText().contains("insert")) ? "vazio" :
                         textArea.getText(); 

       if(haveText.contains("vazio")){
          textArea.setText(haveText);
          JOptionPane.showMessageDialog(null, "Você não pode rodar comandos de alteração de dados neste Script", "ERRO!", ERROR_MESSAGE); 
       }

        return haveText;
    }
}
