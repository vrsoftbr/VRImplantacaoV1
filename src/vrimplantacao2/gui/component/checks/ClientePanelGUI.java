/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vrimplantacao2.gui.component.checks;

import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.openide.util.Exceptions;
import vrframework.classe.ProgressBar;
import vrimplantacao2.dao.cadastro.cliente.OpcaoCliente;
import vrimplantacao2.dao.interfaces.Importador;
import vrimplantacao2.parametro.Parametros;
import vrimplantacao2_5.dao.cadastro.sistemabancodados.SistemaBancoDadosDAO;
import vrimplantacao2_5.dao.sistema.ClienteGenericoDAO;
import vrimplantacao2_5.gui.componente.conexao.configuracao.BaseDeDadosPanel;
import vrimplantacao2_5.vo.cadastro.ScriptLojaOrigemVO;
import vrimplantacao2_5.vo.enums.ESistema;

/**
 *
 * @author Desenvolvimento
 */
public class ClientePanelGUI extends javax.swing.JPanel {

    private static final String SISTEMA = ESistema.GENERICO.getNome();
    static ClienteGenericoDAO dao;
    private String Script = "";
    private Importador importador;
    private vrimplantacao2_5.gui.componente.conexao.configuracao.BaseDeDadosPanel pnlConn;

    public BaseDeDadosPanel getPnlConn() {
        return pnlConn;
    }

    public void setPnlConn(BaseDeDadosPanel pnlConn) {
        this.pnlConn = pnlConn;
    }

    public String getScript() {
        return Script;
    }

    public void setScript(String Script) {
        this.Script = Script;
    }

    public ClientePanelGUI() throws Exception {
        dao = new ClienteGenericoDAO();
        initComponents();
        
        txtAreaCliente.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_SQL);
        txtAreaCliente.setCodeFoldingEnabled(true);
    }

    private void gravarParametros() throws Exception {
        Parametros params = Parametros.get();
        params.put(getPnlConn().getHost(), SISTEMA, "HOST");
        params.put(getPnlConn().getSchema(), SISTEMA, "DATABASE");
        params.put(getPnlConn().getPorta(), SISTEMA, "PORTA");
        params.put(getPnlConn().getUsuario(), SISTEMA, "USUARIO");
        params.put(getPnlConn().getSenha(), SISTEMA, "SENHA");

        getPnlConn().atualizarParametros();

        params.salvar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        rTextArea1 = new org.fife.ui.rtextarea.RTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaCliente = new org.fife.ui.rsyntaxtextarea.RSyntaxTextArea();
        chkForcarUnificacao = new vrframework.bean.checkBox.VRCheckBox();
        jBLimpar = new javax.swing.JButton();
        btnMigrar = new vrframework.bean.button.VRButton();
        jPanel1 = new javax.swing.JPanel();
        cboSistemaCliente = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        rTextArea1.setColumns(20);
        rTextArea1.setRows(5);
        jScrollPane1.setViewportView(rTextArea1);

        txtAreaCliente.setColumns(20);
        txtAreaCliente.setRows(5);
        jScrollPane2.setViewportView(txtAreaCliente);

        org.openide.awt.Mnemonics.setLocalizedText(chkForcarUnificacao, org.openide.util.NbBundle.getMessage(ClientePanelGUI.class, "ClientePanelGUI.chkForcarUnificacao.text")); // NOI18N
        chkForcarUnificacao.setEnabled(true);

        jBLimpar.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jBLimpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vrframework/img/apagar.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jBLimpar, org.openide.util.NbBundle.getMessage(ClientePanelGUI.class, "ClientePanelGUI.jBLimpar.text")); // NOI18N
        jBLimpar.setToolTipText(org.openide.util.NbBundle.getMessage(ClientePanelGUI.class, "ClientePanelGUI.jBLimpar.toolTipText")); // NOI18N
        jBLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLimparActionPerformed(evt);
            }
        });

        btnMigrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vrframework/img/importar.png"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(btnMigrar, org.openide.util.NbBundle.getMessage(ClientePanelGUI.class, "ClientePanelGUI.btnMigrar.text")); // NOI18N
        btnMigrar.setFocusable(false);
        btnMigrar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnMigrar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnMigrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMigrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 152, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 28, Short.MAX_VALUE)
        );

        cboSistemaCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SISTEMAS" }));
        cboSistemaCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSistemaClienteItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(ClientePanelGUI.class, "ClientePanelGUI.jLabel1.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnMigrar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(chkForcarUnificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboSistemaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboSistemaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkForcarUnificacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnMigrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLimpar))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jBLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLimparActionPerformed
        setScript("");
    }//GEN-LAST:event_jBLimparActionPerformed

    private void btnMigrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMigrarActionPerformed
        setScript(validaScript(txtAreaCliente.getText()));
        System.out.println(getScript());
        dao.setScript(getScript());

        Set<OpcaoCliente> opcao = getOpcoesDisponiveisCliente();
        Thread thread = new Thread() {
            @Override
            public void run() {
                try {
                    gravarParametros();
                    ProgressBar.show();
                    importador = new Importador(dao);
                    importador.setLojaOrigem(getPnlConn().getLojaOrigem());
                    importador.setLojaVR(getPnlConn().getLojaVR());
                    importador.setIdConexao(getPnlConn().idConexao);
                    importador.importarClientePreferencial(opcao.toArray(new OpcaoCliente[]{}));
                    ProgressBar.dispose();
                    JOptionPane.showMessageDialog(null, "Clientes Preferenciais migrados com Sucesso!");
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());
                    ProgressBar.dispose();
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                    Exceptions.printStackTrace(ex);
                }
                ProgressBar.dispose();
            }
        };
        thread.start();
    }//GEN-LAST:event_btnMigrarActionPerformed

    private void cboSistemaClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSistemaClienteItemStateChanged
        try {
            gravarParametros();
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }
        SistemaBancoDadosDAO daoScript = new SistemaBancoDadosDAO();
        String sistemaSelecionado = cboSistemaCliente.getSelectedItem().toString();
        try {
            for (ScriptLojaOrigemVO vo : daoScript.getScriptsLojaOrigem()) {
                if (sistemaSelecionado.equals(vo.getSistema())) {
                    txtAreaCliente.setText(vo.getScript());
                }
            }
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
        }
    }//GEN-LAST:event_cboSistemaClienteItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private vrframework.bean.button.VRButton btnMigrar;
    private javax.swing.JComboBox<String> cboSistemaCliente;
    private vrframework.bean.checkBox.VRCheckBox chkForcarUnificacao;
    private javax.swing.JButton jBLimpar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private org.fife.ui.rtextarea.RTextArea rTextArea1;
    private org.fife.ui.rsyntaxtextarea.RSyntaxTextArea txtAreaCliente;
    // End of variables declaration//GEN-END:variables

    public Set<OpcaoCliente> getOpcoesDisponiveisCliente() {
        return new HashSet<>(Arrays.asList(
                OpcaoCliente.DADOS,
                OpcaoCliente.CNPJ,
                OpcaoCliente.INSCRICAO_ESTADUAL,
                OpcaoCliente.RAZAO,
                OpcaoCliente.FANTASIA,
                OpcaoCliente.SITUACAO_CADASTRO,
                OpcaoCliente.ENDERECO,
                OpcaoCliente.NUMERO,
                OpcaoCliente.COMPLEMENTO,
                OpcaoCliente.BAIRRO,
                OpcaoCliente.MUNICIPIO,
                OpcaoCliente.UF,
                OpcaoCliente.CEP,
                OpcaoCliente.ESTADO_CIVIL,
                OpcaoCliente.CONTATOS,
                OpcaoCliente.DATA_CADASTRO,
                OpcaoCliente.DATA_NASCIMENTO,
                OpcaoCliente.EMPRESA,
                OpcaoCliente.ENDERECO_EMPRESA,
                OpcaoCliente.BAIRRO_EMPRESA,
                OpcaoCliente.COMPLEMENTO_EMPRESA,
                OpcaoCliente.MUNICIPIO_EMPRESA,
                OpcaoCliente.UF_EMPRESA,
                OpcaoCliente.CEP_EMPRESA,
                OpcaoCliente.TELEFONE_EMPRESA,
                OpcaoCliente.DATA_ADMISSAO,
                OpcaoCliente.CARGO,
                OpcaoCliente.SALARIO,
                OpcaoCliente.NOME_CONJUGE,
                OpcaoCliente.DATA_NASCIMENTO_CONJUGE,
                OpcaoCliente.NOME_PAI,
                OpcaoCliente.NOME_MAE,
                OpcaoCliente.TELEFONE,
                OpcaoCliente.CELULAR,
                OpcaoCliente.EMAIL,
                OpcaoCliente.RECEBER_CREDITOROTATIVO));
}

    private String validaScript(String script) {
        if (script == null || "".equals(script)) {
            JOptionPane.showMessageDialog(null, "Favor inserir um script valido contendo alias corretos");
        }
        script = script.toUpperCase().contains("UPDATE") ? "VAZIO"
                : script.toUpperCase().contains("CREATE") ? "VAZIO"
                : script.toUpperCase().contains("INSERT") ? "VAZIO"
                : script.toUpperCase().contains("DELETE") ? "VAZIO"
                : script;
        if (script.equals("VAZIO")) {
            JOptionPane.showMessageDialog(null, "Fovor inserir um script válido!");
        }
        return script;
    }
}
